<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="test.mapping.UserPasswordMapper" >    
   <resultMap id="ResultUserPassword" type="test.domain.Users" >	
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="VARCHAR" />
		<result column="height" property="height" jdbcType="VARCHAR" />
		<result column="weight" property="weight" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />	
  </resultMap>
  
   <!-- 个人信息及其密码 -->
  <resultMap id="BaseResultMap" type="test.domain.Users"  extends="ResultUserPassword">
    <collection property="userPassword" ofType="test.domain.UserPassword" >
	    <id column="user_id" property="userId" jdbcType="INTEGER" />
	    <result column="password" property="password" jdbcType="VARCHAR" />
    </collection>
  </resultMap>  
  
  
  <!-- 个人信息及兴趣爱好 -->
  <resultMap id="ResultUserInterest" type="test.domain.Users" extends="BaseResultMap" >
	<collection property="interests" ofType="test.domain.Interest" >
		<id column="id" property="id" jdbcType="INTEGER" />
    	<result column="name" property="name" jdbcType="VARCHAR" />
    	<result column="level" property="level" jdbcType="INTEGER" />
	</collection>
  </resultMap>
  
  <select id="findUserPassword" parameterType="map" resultMap="ResultUserPassword" >
   select u.id,username,name,age,height,weight,phone,gender,password
	from
	    (select user_id,password from user_password) p
	left join
		(select id,username,name,age,height,weight,gender,phone from users) u
	on p.user_id = u.id 
	<where>
	    <if test="username!=null">and username=#{username,jdbcType=VARCHAR}</if>
	    <if test="password!=null">and password=#{password,jdbcType=VARCHAR}</if>
	</where> 
  </select>
  
  <!-- 查询某个人的信息,包括兴趣爱好
  <select id="findUserInterest" paramterType="map" resultMap="ResultUserInterest">
	select u.id,username,name,height,phone,interest_name,level
	from
	    (select id,name as interest_name,level,user_id from interest) i
	left join
		(select id,username,name,age,height,gender phone from users) u
	on i.user_id = u.id 
	<where>
	    <if test="username!=null">user_name=#{username}</if>
	</where>
  </select> -->
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_password
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="test.domain.UserPassword" >
    insert into user_password (user_id, password)
    values (#{userId,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="test.domain.UserPassword" >
    insert into user_password
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="password != null" >
        password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="test.domain.UserPassword" >
    update user_password
    <set >
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test.domain.UserPassword" >
    update user_password
    set password = #{password,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>